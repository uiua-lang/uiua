[workspace]
members = ["site", "tests_ffi", "pad/editor", "parser"]

[workspace.package]
categories = ["compilers", "algorithms", "multimedia", "parser-implementations"]
edition = "2021"
keywords = ["uiua", "array", "stack", "language", "apl"]
license = "MIT"
readme = "readme.md"
repository = "https://github.com/uiua-lang/uiua"
rust-version = "1.82.0"
version = "0.17.0-dev.1"

[workspace.lints.clippy]
cargo = {level = "warn", priority = -1}
print_stdout = "warn"
print_stderr = "allow"
dbg_macro = "warn"
pedantic = {level = "warn", priority = -1}
ptr_cast_constness = "allow"  # 15
redundant_else = "allow"  # 15
unnecessary_semicolon = "allow"  # 15
manual_assert = "allow"  # 16
inline_always = "allow"  # 18
from_iter_instead_of_collect = "allow"  # 20
default_trait_access = "allow"  # 23
format_push_string = "allow"  # 27
missing_panics_doc = "allow"  # 37
used_underscore_binding = "allow"  # 39
float_cmp = "allow"  # 40
map_unwrap_or = "allow"  # 59
return_self_not_must_use = "allow"  # 61
needless_pass_by_value = "allow"  # 70
items_after_statements = "allow"  # 74
redundant_closure_for_method_calls = "allow"  # 75
ptr_as_ptr = "allow"  # 83
similar_names = "allow"  # 93
enum_glob_use = "allow"  # 96
cast_possible_wrap = "allow"  # 105
too_many_lines = "allow"  # 106
wildcard_imports = "allow"  # 134
cast_precision_loss = "allow"  # 172
match_same_arms = "allow"  # 176
cast_sign_loss = "allow"  # 190
missing_errors_doc = "allow"  # 224
semicolon_if_nothing_returned = "allow"  # 263
must_use_candidate = "allow"  # 301
cast_possible_truncation = "allow"  # 349
cast_lossless = "allow"  # 355


[workspace.dependencies]
base64 = "0.22.0"
bytemuck = "1.17"
colored = "2"
dashmap = {version = "6", features = ["serde"]}
ecow = {version = "0.2.3", features = ["serde"]}
enum-iterator = "2.1.0"
hound = "3.5.1"
js-sys = "0.3.69"
leptos = "0.6.11"
leptos_router = {version = "0.6.11", features = ["csr"]}
leptos_meta = {version = "0.6.11", features = ["csr"]}
rand = {version = "0.8.5", features = ["small_rng"]}
serde = {version = "1", features = ["derive"]}
serde_json = "1.0.115"
unicode-segmentation = "1.10"
urlencoding = "2"
# NOTE: if you change the wasm-bindgen version, remember to change it in nix/site.nix as well
wasm-bindgen = "=0.2.93"

[workspace.dependencies.web-sys]
version = "0.3.70"
features = [
  "Clipboard",
  "ClipboardEvent",
  "CssStyleDeclaration",
  "DataTransfer",
  "DataTransfer",
  "DomRect",
  "EventInit",
  "File",
  "FileList",
  "FileReader",
  "HtmlAudioElement",
  "HtmlBrElement",
  "Navigator",
  "Node",
  "Performance",
  "Permissions",
  "ResizeObserver",
  "ResizeObserverEntry",
  "ScrollBehavior",
  "ScrollIntoViewOptions",
  "ScrollLogicalPosition",
  "Selection",
  "Storage",
  "StorageManager",
]


[package]
description = "A stack-based array programming language"
documentation = "https://docs.rs/uiua"
name = "uiua"
categories.workspace = true
edition.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true


[dependencies]
# Uiua dependencies
uiua_parser = {path = "parser", version = "0.17.0-dev.1"}

# Core dependencies
bitflags = {version = "2", features = ["serde"]}
bytemuck = {workspace = true, features = [
  "must_cast",
  "derive",
  "extern_crate_alloc",
]}
colored.workspace = true
crossbeam-channel = "0.5.12"
dashmap.workspace = true
ecow.workspace = true
enum-iterator.workspace = true
indexmap = {version = "2", features = ["serde"]}
num_cpus = "1.16.0"
parking_lot = "0.12.1"
paste = "1.0.14"
pathdiff = "0.2.1"
rand.workspace = true
rayon = "1.9.0"
regex = "1.10.3"
serde = {workspace = true, features = ["rc"]}
serde_json.workspace = true
smallvec = {version = "1.9", features = ["serde", "union", "const_new"]}
thread_local = "1"
threadpool = "1.8.1"
time = {version = "0.3.36", features = ["local-offset"]}
unicode-segmentation.workspace = true
open = {version = "5", optional = true}
rawrrr = {version = "0.2.1", optional = true}
rustls = {version = "0.23.2", optional = true, default-features = false, features = [
  "std",
  "tls12",
  "ring",
]}
terminal_size = {version = "0.4.2", optional = true}
trash = {version = "5.2.2", optional = true}
viuer = {version = "0.9", optional = true}
webpki-roots = {version = "1.0.2", optional = true}

# Native audio dependencies
hodaun = {version = "0.4.1", optional = true, features = ["output", "wav"]}

# Binary dependencies
clap = {version = "4", optional = true, features = ["derive"]}
color-backtrace = {version = "0.6.1", optional = true}
ctrlc = {version = "3.4.6", optional = true}
icy_sixel = {version = "0.1.2", optional = true}
notify = {version = "7", optional = true}
rustyline = {version = "15.0.0", optional = true}
terminal-light = {version = "1.4.0", optional = true}
tokio = {version = "1", optional = true, features = ["io-std", "rt"]}
tower-lsp = {version = "0.20.0", optional = true, features = ["proposed"]}

# Profiling dependencies
serde_yaml = {version = "0.9.33", optional = true}

# Feature dependencies
arboard = {version = "3", optional = true}
calamine = {version = "0.28.0", optional = true}
color_quant = {version = "1.1", optional = true}
cosmic-text = {version = "0.12.1", optional = true}
csv = {version = "1", optional = true}
gif = {version = "0.13.1", optional = true}
hound = {workspace = true, optional = true}
image = {version = "0.25", optional = true, default-features = false, features = [
  "bmp",
  "gif",
  "ico",
  "jpeg",
  "png",
  "qoi",
  "webp",
]}
json5 = {version = "0.4.1", optional = true}
libffi = {version = "4", optional = true}
libloading = {version = "0.8.3", optional = true}
nokhwa = {version = "0.10.7", optional = true, features = ["input-native"]}
num-complex = {version = ">=0.4.1", optional = true, default-features = false, features = [
  "bytemuck",
]}
png = {version = "0.17.16", optional = true}
rustfft = {version = "6.2.0", optional = true}
rustls-pemfile = {version = "2.1.2", optional = true}
simple_excel_writer = {version = "0.2.0", optional = true}
sys-locale = {version = "0.3.1", optional = true}

# Web-only dependencies
js-sys = {workspace = true, optional = true}
wasm-bindgen = {workspace = true, optional = true}
web-sys = {version = "0.3.60", optional = true}

# Window dependencies
eframe = {version = "0.29.1", optional = true, features = ["persistence"]}
native-dialog = {version = "0.7.0", optional = true}
rmp-serde = {version = "1.3.0", optional = true}

[features]
apng = ["dep:png"]
audio = ["hodaun", "audio_encode"]
audio_encode = ["hound"]
batteries = [
  "gif",
  "apng",
  "image",
  "audio_encode",
  "csv",
  "xlsx",
  "json5",
  "fft",
  "font_shaping",
]
binary = [
  "ctrlc",
  "notify",
  "clap",
  "color-backtrace",
  "rustyline",
  "native_sys",
  "ffi",
  "terminal-light",
  "terminal_size",
]
bytes = [] # No longer used
clipboard = ["arboard"]
debug = []
default = [
  # "window", # Comment in for dev
  "binary",
  "terminal_image",
  "lsp",
  "stand",
  "tls",
  "invoke",
  "trash",
  "native_sys",
  "raw_mode",
  "clipboard",
  "opt",
  "batteries",
]
ffi = ["libffi", "libloading"]
fft = ["rustfft", "num-complex"]
font_shaping = ["cosmic-text", "sys-locale"]
full = ["audio", "webcam", "window"] # Enables all optional features
gif = ["dep:gif", "image", "color_quant"]
invoke = ["open"]
lsp = ["tower-lsp", "tokio", "native_sys"]
native_sys = []
opt = [] # Enables some optimizations but increases binary size
profile = ["serde_yaml"]
raw_mode = ["rawrrr", "native_sys"]
stand = ["native_sys"]
terminal_image = ["viuer", "image", "icy_sixel"]
tls = ["rustls", "webpki-roots", "rustls-pemfile"]
web = ["wasm-bindgen", "js-sys", "web-sys"]
webcam = ["image", "nokhwa"]
window = ["eframe", "rmp-serde", "image", "native-dialog"]
xlsx = ["calamine", "simple_excel_writer"]
# Use system static libraries instead of building them
system = ["libffi?/system"]

[[bin]]
name = "uiua"
required-features = ["binary"]

[lints]
workspace = true

[profile.dev]
incremental = true
